{"ast":null,"code":"var _jsxFileName = \"/Users/ruby/Desktop/split/src/ExpensesScreen.jsx\";\nimport BackLink from \"./BackLink\";\nimport ExpensesRow from \"./ExpensesRow\";\nimport { StyledButton, StyledInput } from \"./Styles\";\nimport { INTRO_SCREEN, SELECT_PLACEHOLDER } from \"./constants\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ExpensesScreen = ({\n  names,\n  total,\n  setTotal,\n  setResults,\n  setCurrentScreen\n}) => {\n  const calculate = () => {\n    // key: person's name, value: amount\n    const expenseMap = {};\n    // To be used to keep track of porportions later. All amounts need to be added to this\n    let subTotal = 0;\n\n    // Calculate shared expenses\n    const sharedExpenses = document.getElementsByClassName(\"shared-people\");\n    for (let i = 0; i < sharedExpenses.length; i++) {\n      const sharedNames = document.getElementsByClassName(\"shared-people\")[i].getElementsByTagName(\"button\")[0].innerHTML.split(\",\");\n      if ((sharedNames === null || sharedNames === void 0 ? void 0 : sharedNames[0]) === SELECT_PLACEHOLDER) {\n        // It means user has not selected anyone for this\n        continue;\n      }\n      const sharedAmount = parseFloat(document.getElementsByClassName(\"shared-amount\")[i].getElementsByTagName(\"input\")[0].value) || 0;\n      subTotal += sharedAmount;\n      const splitAmount = parseFloat(sharedAmount) / sharedNames.length;\n      sharedNames.forEach(name => {\n        expenseMap[name.trim()] += splitAmount;\n      });\n    }\n    const resultsArr = [];\n    Object.keys(expenseMap).forEach(name => {\n      const individualFinalAmt = (expenseMap[name] / subTotal * total).toFixed(2);\n      resultsArr.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), \" pays \", individualFinalAmt]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this));\n    });\n    console.log(\"expenseMap\", expenseMap);\n    setResults(resultsArr);\n  };\n  const isDisabled = false;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BackLink, {\n      newScreen: INTRO_SCREEN,\n      setCurrentScreen: setCurrentScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Shared Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpensesRow, {\n      names: names\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Total\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n      placeholder: \"Amount\",\n      variant: \"outlined\",\n      type: \"number\",\n      onChange: e => setTotal(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n      disabled: isDisabled,\n      onClick: () => calculate(),\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = ExpensesScreen;\nexport default ExpensesScreen;\nvar _c;\n$RefreshReg$(_c, \"ExpensesScreen\");","map":{"version":3,"names":["BackLink","ExpensesRow","StyledButton","StyledInput","INTRO_SCREEN","SELECT_PLACEHOLDER","jsxDEV","_jsxDEV","Fragment","_Fragment","ExpensesScreen","names","total","setTotal","setResults","setCurrentScreen","calculate","expenseMap","subTotal","sharedExpenses","document","getElementsByClassName","i","length","sharedNames","getElementsByTagName","innerHTML","split","sharedAmount","parseFloat","value","splitAmount","forEach","name","trim","resultsArr","Object","keys","individualFinalAmt","toFixed","push","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","isDisabled","newScreen","placeholder","variant","type","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/ruby/Desktop/split/src/ExpensesScreen.jsx"],"sourcesContent":["import BackLink from \"./BackLink\";\nimport ExpensesRow from \"./ExpensesRow\";\nimport { StyledButton, StyledInput } from \"./Styles\";\nimport { INTRO_SCREEN, SELECT_PLACEHOLDER } from \"./constants\";\n\nconst ExpensesScreen = ({\n  names,\n  total,\n  setTotal,\n  setResults,\n  setCurrentScreen,\n}) => {\n  const calculate = () => {\n    // key: person's name, value: amount\n    const expenseMap = {};\n    // To be used to keep track of porportions later. All amounts need to be added to this\n    let subTotal = 0;\n\n    // Calculate shared expenses\n    const sharedExpenses = document.getElementsByClassName(\"shared-people\");\n\n    for (let i = 0; i < sharedExpenses.length; i++) {\n      const sharedNames = document\n        .getElementsByClassName(\"shared-people\")\n        [i].getElementsByTagName(\"button\")[0]\n        .innerHTML.split(\",\");\n\n      if (sharedNames?.[0] === SELECT_PLACEHOLDER) {\n        // It means user has not selected anyone for this\n        continue;\n      }\n\n      const sharedAmount =\n        parseFloat(\n          document\n            .getElementsByClassName(\"shared-amount\")\n            [i].getElementsByTagName(\"input\")[0].value\n        ) || 0;\n\n      subTotal += sharedAmount;\n      const splitAmount = parseFloat(sharedAmount) / sharedNames.length;\n      sharedNames.forEach((name) => {\n        expenseMap[name.trim()] += splitAmount;\n      });\n    }\n\n    const resultsArr = [];\n    Object.keys(expenseMap).forEach((name) => {\n      const individualFinalAmt = (\n        (expenseMap[name] / subTotal) *\n        total\n      ).toFixed(2);\n      resultsArr.push(\n        <div>\n          <b>{name}</b> pays {individualFinalAmt}\n        </div>\n      );\n    });\n    console.log(\"expenseMap\", expenseMap);\n    setResults(resultsArr);\n  };\n\n  const isDisabled = false;\n  return (\n    <>\n      <BackLink newScreen={INTRO_SCREEN} setCurrentScreen={setCurrentScreen} />\n      <h3>Shared Expenses</h3>\n      <ExpensesRow names={names} />\n      <h3>Total</h3>\n      <StyledInput\n        placeholder=\"Amount\"\n        variant=\"outlined\"\n        type=\"number\"\n        onChange={(e) => setTotal(e.target.value)}\n      />\n      <p />\n      <StyledButton disabled={isDisabled} onClick={() => calculate()}>\n        Calculate\n      </StyledButton>\n    </>\n  );\n};\n\nexport default ExpensesScreen;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}