{"ast":null,"code":"var _jsxFileName = \"/Users/ruby/Desktop/split/src/ResultsScreen.jsx\";\nimport BackLink from \"./BackLink\";\nimport { EXPENSES_SCREEN } from \"./constants\";\nimport Table from \"@mui/joy/Table\";\nimport styled from \"@emotion/styled\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledTable = styled(Table)`\n  margin-top: 24px;\n`;\n_c = StyledTable;\nconst ResultsScreen = ({\n  results,\n  setCurrentScreen\n}) => {\n  const formattedResults = [];\n  for (let result of results) {\n    formattedResults.push(/*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        style: {\n          textAlign: \"left\"\n        },\n        children: result.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        style: {\n          textAlign: \"left\"\n        },\n        children: result.cost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BackLink, {\n      newScreen: EXPENSES_SCREEN,\n      setCurrentScreen: setCurrentScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTable, {\n      size: \"lg\",\n      stripe: \"odd\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: \"40%\"\n            },\n            children: \"Person\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              width: \"20%\"\n            },\n            children: \"Cost\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), formattedResults]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = ResultsScreen;\nexport default ResultsScreen;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledTable\");\n$RefreshReg$(_c2, \"ResultsScreen\");","map":{"version":3,"names":["BackLink","EXPENSES_SCREEN","Table","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledTable","_c","ResultsScreen","results","setCurrentScreen","formattedResults","result","push","children","style","textAlign","name","fileName","_jsxFileName","lineNumber","columnNumber","cost","newScreen","size","stripe","width","_c2","$RefreshReg$"],"sources":["/Users/ruby/Desktop/split/src/ResultsScreen.jsx"],"sourcesContent":["import BackLink from \"./BackLink\";\nimport { EXPENSES_SCREEN } from \"./constants\";\nimport Table from \"@mui/joy/Table\";\nimport styled from \"@emotion/styled\";\n\nconst StyledTable = styled(Table)`\n  margin-top: 24px;\n`;\n\nconst ResultsScreen = ({ results, setCurrentScreen }) => {\n  const formattedResults = [];\n\n  for (let result of results) {\n    formattedResults.push(\n      <tr>\n        <td style={{ textAlign: \"left\" }}>{result.name}</td>\n        <td style={{ textAlign: \"left\" }}>{result.cost}</td>\n      </tr>\n    );\n  }\n\n  return (\n    <>\n      <BackLink\n        newScreen={EXPENSES_SCREEN}\n        setCurrentScreen={setCurrentScreen}\n      />\n      <StyledTable size=\"lg\" stripe=\"odd\">\n        <thead>\n          <tr>\n            <th style={{ width: \"40%\" }}>Person</th>\n            <th style={{ width: \"20%\" }}>Cost</th>\n          </tr>\n        </thead>\n        {formattedResults}\n      </StyledTable>\n    </>\n  );\n};\nexport default ResultsScreen;\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,YAAY;AACjC,SAASC,eAAe,QAAQ,aAAa;AAC7C,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErC,MAAMC,WAAW,GAAGL,MAAM,CAACD,KAAK,CAAC;AACjC;AACA,CAAC;AAACO,EAAA,GAFID,WAAW;AAIjB,MAAME,aAAa,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAiB,CAAC,KAAK;EACvD,MAAMC,gBAAgB,GAAG,EAAE;EAE3B,KAAK,IAAIC,MAAM,IAAIH,OAAO,EAAE;IAC1BE,gBAAgB,CAACE,IAAI,cACnBV,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAIY,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAF,QAAA,EAAEF,MAAM,CAACK;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpDlB,OAAA;QAAIY,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAO,CAAE;QAAAF,QAAA,EAAEF,MAAM,CAACU;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACN,CAAC;EACH;EAEA,oBACElB,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA,CAACL,QAAQ;MACPyB,SAAS,EAAExB,eAAgB;MAC3BW,gBAAgB,EAAEA;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACFlB,OAAA,CAACG,WAAW;MAACkB,IAAI,EAAC,IAAI;MAACC,MAAM,EAAC,KAAK;MAAAX,QAAA,gBACjCX,OAAA;QAAAW,QAAA,eACEX,OAAA;UAAAW,QAAA,gBACEX,OAAA;YAAIY,KAAK,EAAE;cAAEW,KAAK,EAAE;YAAM,CAAE;YAAAZ,QAAA,EAAC;UAAM;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACxClB,OAAA;YAAIY,KAAK,EAAE;cAAEW,KAAK,EAAE;YAAM,CAAE;YAAAZ,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EACPV,gBAAgB;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACd,CAAC;AAEP,CAAC;AAACM,GAAA,GA7BInB,aAAa;AA8BnB,eAAeA,aAAa;AAAC,IAAAD,EAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}