{"ast":null,"code":"var _jsxFileName = \"/Users/ruby/Desktop/split/src/NameRows.jsx\";\nimport { StyledInput } from \"./Styles\";\nimport useStateRef from \"react-usestateref\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NameRow = ({\n  i,\n  names,\n  setNames\n}) => {\n  const personKey = `person-${i}`;\n  return /*#__PURE__*/_jsxDEV(StyledInput, {\n    id: `${personKey}-name`,\n    placeholder: `Person ${i} Name`,\n    variant: \"outlined\",\n    onChange: e => {\n      setNames({\n        ...names,\n        [personKey]: e.target.value || `Person ${i}`\n      });\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = NameRow;\nconst NameRows = ({\n  numOfPeople,\n  names,\n  setNames\n}) => {\n  const nameRows = [];\n  for (let i = 1; i <= numOfPeople; i++) {\n    nameRows.push(/*#__PURE__*/_jsxDEV(NameRow, {\n      i: i,\n      names: names,\n      setNames: setNames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 19\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: nameRows\n  }, void 0, false);\n};\n_c2 = NameRows;\nexport default NameRows;\nvar _c, _c2;\n$RefreshReg$(_c, \"NameRow\");\n$RefreshReg$(_c2, \"NameRows\");","map":{"version":3,"names":["StyledInput","useStateRef","jsxDEV","_jsxDEV","Fragment","_Fragment","NameRow","i","names","setNames","personKey","id","placeholder","variant","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","NameRows","numOfPeople","nameRows","push","children","_c2","$RefreshReg$"],"sources":["/Users/ruby/Desktop/split/src/NameRows.jsx"],"sourcesContent":["import { StyledInput } from \"./Styles\";\nimport useStateRef from \"react-usestateref\";\n\nconst NameRow = ({ i, names, setNames }) => {\n  const personKey = `person-${i}`;\n\n  return (\n    <StyledInput\n      id={`${personKey}-name`}\n      placeholder={`Person ${i} Name`}\n      variant=\"outlined\"\n      onChange={(e) => {\n        setNames({\n          ...names,\n          [personKey]: e.target.value || `Person ${i}`,\n        });\n      }}\n    />\n  );\n};\n\nconst NameRows = ({ numOfPeople, names, setNames }) => {\n  const nameRows = [];\n  for (let i = 1; i <= numOfPeople; i++) {\n    nameRows.push(<NameRow i={i} names={names} setNames={setNames} />);\n  }\n\n  return <>{nameRows}</>;\n};\nexport default NameRows;\n"],"mappings":";AAAA,SAASA,WAAW,QAAQ,UAAU;AACtC,OAAOC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,OAAO,GAAGA,CAAC;EAAEC,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAC1C,MAAMC,SAAS,GAAG,UAAUH,CAAC,EAAE;EAE/B,oBACEJ,OAAA,CAACH,WAAW;IACVW,EAAE,EAAE,GAAGD,SAAS,OAAQ;IACxBE,WAAW,EAAE,UAAUL,CAAC,OAAQ;IAChCM,OAAO,EAAC,UAAU;IAClBC,QAAQ,EAAGC,CAAC,IAAK;MACfN,QAAQ,CAAC;QACP,GAAGD,KAAK;QACR,CAACE,SAAS,GAAGK,CAAC,CAACC,MAAM,CAACC,KAAK,IAAI,UAAUV,CAAC;MAC5C,CAAC,CAAC;IACJ;EAAE;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACC,EAAA,GAhBIhB,OAAO;AAkBb,MAAMiB,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEhB,KAAK;EAAEC;AAAS,CAAC,KAAK;EACrD,MAAMgB,QAAQ,GAAG,EAAE;EACnB,KAAK,IAAIlB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIiB,WAAW,EAAEjB,CAAC,EAAE,EAAE;IACrCkB,QAAQ,CAACC,IAAI,cAACvB,OAAA,CAACG,OAAO;MAACC,CAAC,EAAEA,CAAE;MAACC,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;EACpE;EAEA,oBAAOlB,OAAA,CAAAE,SAAA;IAAAsB,QAAA,EAAGF;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACG,GAAA,GAPIL,QAAQ;AAQd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAM,GAAA;AAAAC,YAAA,CAAAP,EAAA;AAAAO,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}