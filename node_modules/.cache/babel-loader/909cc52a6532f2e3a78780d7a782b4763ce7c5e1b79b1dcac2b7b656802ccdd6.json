{"ast":null,"code":"var _jsxFileName = \"/Users/ruby/Desktop/split/src/IntroScreen.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport NameRows from \"./NameRows\";\nimport { StyledButton, StyledInput } from \"./Styles\";\nimport { EXPENSES_SCREEN } from \"./constants\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst IntroScreen = ({\n  numOfPeople,\n  setNumOfPeople,\n  names,\n  setNames,\n  setCurrentScreen\n}) => {\n  _s();\n  const [isNextDisabled, setIsNextDisabled] = useState(true);\n  useEffect(() => {\n    setIsNextDisabled(Object.keys(names).length !== numOfPeople);\n  }, [names]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How Many People?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n        placeholder: \"# of People\",\n        type: \"number\",\n        value: numOfPeople,\n        variant: \"outlined\",\n        onChange: e => setNumOfPeople(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Names\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NameRows, {\n      numOfPeople: numOfPeople,\n      names: names,\n      setNames: setNames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n      onClick: () => setCurrentScreen(EXPENSES_SCREEN),\n      disabled: isNextDisabled,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(IntroScreen, \"XrTEzobKjfbbf4ELqMl7grTS8w0=\");\n_c = IntroScreen;\nexport default IntroScreen;\nvar _c;\n$RefreshReg$(_c, \"IntroScreen\");","map":{"version":3,"names":["useState","useEffect","NameRows","StyledButton","StyledInput","EXPENSES_SCREEN","jsxDEV","_jsxDEV","Fragment","_Fragment","IntroScreen","numOfPeople","setNumOfPeople","names","setNames","setCurrentScreen","_s","isNextDisabled","setIsNextDisabled","Object","keys","length","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","value","variant","onChange","e","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/ruby/Desktop/split/src/IntroScreen.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport NameRows from \"./NameRows\";\nimport { StyledButton, StyledInput } from \"./Styles\";\nimport { EXPENSES_SCREEN } from \"./constants\";\n\nconst IntroScreen = ({\n  numOfPeople,\n  setNumOfPeople,\n  names,\n  setNames,\n  setCurrentScreen,\n}) => {\n  const [isNextDisabled, setIsNextDisabled] = useState(true);\n  useEffect(() => {\n    setIsNextDisabled(Object.keys(names).length !== numOfPeople);\n  }, [names]);\n\n  return (\n    <>\n      <div>\n        <h3>How Many People?</h3>\n        <StyledInput\n          placeholder=\"# of People\"\n          type=\"number\"\n          value={numOfPeople}\n          variant=\"outlined\"\n          onChange={(e) => setNumOfPeople(e.target.value)}\n        />\n      </div>\n\n      <h3>Names</h3>\n      <NameRows numOfPeople={numOfPeople} names={names} setNames={setNames} />\n\n      <StyledButton\n        onClick={() => setCurrentScreen(EXPENSES_SCREEN)}\n        disabled={isNextDisabled}\n      >\n        Next\n      </StyledButton>\n    </>\n  );\n};\nexport default IntroScreen;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,YAAY,EAAEC,WAAW,QAAQ,UAAU;AACpD,SAASC,eAAe,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAC;EACnBC,WAAW;EACXC,cAAc;EACdC,KAAK;EACLC,QAAQ;EACRC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC1DC,SAAS,CAAC,MAAM;IACdiB,iBAAiB,CAACC,MAAM,CAACC,IAAI,CAACP,KAAK,CAAC,CAACQ,MAAM,KAAKV,WAAW,CAAC;EAC9D,CAAC,EAAE,CAACE,KAAK,CAAC,CAAC;EAEX,oBACEN,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA;MAAAe,QAAA,gBACEf,OAAA;QAAAe,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBnB,OAAA,CAACH,WAAW;QACVuB,WAAW,EAAC,aAAa;QACzBC,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAElB,WAAY;QACnBmB,OAAO,EAAC,UAAU;QAClBC,QAAQ,EAAGC,CAAC,IAAKpB,cAAc,CAACoB,CAAC,CAACC,MAAM,CAACJ,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENnB,OAAA;MAAAe,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdnB,OAAA,CAACL,QAAQ;MAACS,WAAW,EAAEA,WAAY;MAACE,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExEnB,OAAA,CAACJ,YAAY;MACX+B,OAAO,EAAEA,CAAA,KAAMnB,gBAAgB,CAACV,eAAe,CAAE;MACjD8B,QAAQ,EAAElB,cAAe;MAAAK,QAAA,EAC1B;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAAC;EAAA,eACf,CAAC;AAEP,CAAC;AAACV,EAAA,CApCIN,WAAW;AAAA0B,EAAA,GAAX1B,WAAW;AAqCjB,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}