{"ast":null,"code":"var _jsxFileName = \"/Users/ruby/Desktop/split-react/src/NameRows.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NameRows = ({\n  numOfPeople,\n  names,\n  setNames\n}) => {\n  const NameRow = () => {\n    /*#__PURE__*/_jsxDEV(StyledInput, {\n      id: `person-${i}-name`,\n      placeholder: `Person ${i} Name`,\n      variant: \"outlined\",\n      onChange: e => setNames({\n        ...names,\n        [personKey]: e.target.value || `Person ${i}`\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 5\n    }, this);\n  };\n  const nameRows = [];\n  for (let i = 0; i < numOfPeople; i++) {\n    nameRows.push(/*#__PURE__*/_jsxDEV(NameRow, {\n      i: i + 1,\n      names: names,\n      setNames: setNames\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 19\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: nameRows\n  }, void 0, false);\n};\n_c = NameRows;\nexport default NameRows;\nvar _c;\n$RefreshReg$(_c, \"NameRows\");","map":{"version":3,"names":["NameRows","numOfPeople","names","setNames","NameRow","_jsxDEV","StyledInput","id","i","placeholder","variant","onChange","e","personKey","target","value","fileName","_jsxFileName","lineNumber","columnNumber","nameRows","push","_Fragment","children","_c","$RefreshReg$"],"sources":["/Users/ruby/Desktop/split-react/src/NameRows.jsx"],"sourcesContent":["const NameRows = ({ numOfPeople, names, setNames }) => {\n  const NameRow = () => {\n    <StyledInput\n      id={`person-${i}-name`}\n      placeholder={`Person ${i} Name`}\n      variant=\"outlined\"\n      onChange={(e) =>\n        setNames({\n          ...names,\n          [personKey]: e.target.value || `Person ${i}`,\n        })\n      }\n    />;\n  };\n  const nameRows = [];\n  for (let i = 0; i < numOfPeople; i++) {\n    nameRows.push(<NameRow i={i + 1} names={names} setNames={setNames} />);\n  }\n  return <>{nameRows}</>;\n};\nexport default NameRows;\n"],"mappings":";;AAAA,MAAMA,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACrD,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpB,aAAAC,OAAA,CAACC,WAAW;MACVC,EAAE,EAAE,UAAUC,CAAC,OAAQ;MACvBC,WAAW,EAAE,UAAUD,CAAC,OAAQ;MAChCE,OAAO,EAAC,UAAU;MAClBC,QAAQ,EAAGC,CAAC,IACVT,QAAQ,CAAC;QACP,GAAGD,KAAK;QACR,CAACW,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,IAAI,UAAUP,CAAC;MAC5C,CAAC;IACF;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EACJ,CAAC;EACD,MAAMC,QAAQ,GAAG,EAAE;EACnB,KAAK,IAAIZ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGP,WAAW,EAAEO,CAAC,EAAE,EAAE;IACpCY,QAAQ,CAACC,IAAI,cAAChB,OAAA,CAACD,OAAO;MAACI,CAAC,EAAEA,CAAC,GAAG,CAAE;MAACN,KAAK,EAAEA,KAAM;MAACC,QAAQ,EAAEA;IAAS;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;EACxE;EACA,oBAAOd,OAAA,CAAAiB,SAAA;IAAAC,QAAA,EAAGH;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACI,EAAA,GAnBIxB,QAAQ;AAoBd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}