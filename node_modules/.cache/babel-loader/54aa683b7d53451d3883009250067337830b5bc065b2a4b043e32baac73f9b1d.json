{"ast":null,"code":"var _jsxFileName = \"/Users/ruby/Desktop/split/src/NameRows.jsx\";\nimport { useState } from \"react\";\nimport { StyledInput } from \"./Styles\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NameRows = ({\n  numOfPeople,\n  names,\n  setNames\n}) => {\n  var _s = $RefreshSig$();\n  const NameRow = ({\n    i\n  }) => {\n    _s();\n    const personKey = `person-${i}`;\n    const [currName, setCurrName] = useState(\"\");\n    return (\n      /*#__PURE__*/\n      // <StyledInput\n      //   id={`${personKey}-name`}\n      //   placeholder={`Person ${i} Name`}\n      //   variant=\"outlined\"\n      //   // value={currName}\n      //   onChange={(e) => {\n      //     setCurrName(e.target.value);\n      //     setNames({\n      //       ...names,\n      //       [personKey]: e.target.value || `Person ${i}`,\n      //     });\n      //   }}\n      // />\n      _jsxDEV(StyledInput, {\n        id: `person-${i}-name`,\n        placeholder: `Person ${i} Name`,\n        variant: \"outlined\",\n        value: \"hie\",\n        onChange: e => {\n          console.log(\"setting as\", {\n            ...names,\n            [personKey]: e.target.value || `Person ${i}`\n          });\n          setNames({\n            ...names,\n            [personKey]: e.target.value || `Person ${i}`\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)\n    );\n  };\n  _s(NameRow, \"8uWHirJj0Qmsy0vLcdLvIkdiN0g=\");\n  const nameRows = [];\n  for (let i = 1; i <= numOfPeople; i++) {\n    nameRows.push(/*#__PURE__*/_jsxDEV(NameRow, {\n      i: i\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 19\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: nameRows\n  }, void 0, false);\n};\n_c = NameRows;\nexport default NameRows;\nvar _c;\n$RefreshReg$(_c, \"NameRows\");","map":{"version":3,"names":["useState","StyledInput","jsxDEV","_jsxDEV","Fragment","_Fragment","NameRows","numOfPeople","names","setNames","_s","$RefreshSig$","NameRow","i","personKey","currName","setCurrName","id","placeholder","variant","value","onChange","e","console","log","target","fileName","_jsxFileName","lineNumber","columnNumber","nameRows","push","children","_c","$RefreshReg$"],"sources":["/Users/ruby/Desktop/split/src/NameRows.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { StyledInput } from \"./Styles\";\n\nconst NameRows = ({ numOfPeople, names, setNames }) => {\n  const NameRow = ({ i }) => {\n    const personKey = `person-${i}`;\n    const [currName, setCurrName] = useState(\"\");\n    return (\n      // <StyledInput\n      //   id={`${personKey}-name`}\n      //   placeholder={`Person ${i} Name`}\n      //   variant=\"outlined\"\n      //   // value={currName}\n      //   onChange={(e) => {\n      //     setCurrName(e.target.value);\n      //     setNames({\n      //       ...names,\n      //       [personKey]: e.target.value || `Person ${i}`,\n      //     });\n      //   }}\n      // />\n      <StyledInput\n        id={`person-${i}-name`}\n        placeholder={`Person ${i} Name`}\n        variant=\"outlined\"\n        value={\"hie\"}\n        onChange={(e) => {\n          console.log(\"setting as\", {\n            ...names,\n            [personKey]: e.target.value || `Person ${i}`,\n          });\n          setNames({\n            ...names,\n            [personKey]: e.target.value || `Person ${i}`,\n          });\n        }}\n      />\n    );\n  };\n\n  const nameRows = [];\n  for (let i = 1; i <= numOfPeople; i++) {\n    nameRows.push(<NameRow i={i} />);\n  }\n\n  return <>{nameRows}</>;\n};\nexport default NameRows;\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,WAAW;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EAAA,IAAAC,EAAA,GAAAC,YAAA;EACrD,MAAMC,OAAO,GAAGA,CAAC;IAAEC;EAAE,CAAC,KAAK;IAAAH,EAAA;IACzB,MAAMI,SAAS,GAAG,UAAUD,CAAC,EAAE;IAC/B,MAAM,CAACE,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;IAC5C;MAAA;MACE;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAG,OAAA,CAACF,WAAW;QACVgB,EAAE,EAAE,UAAUJ,CAAC,OAAQ;QACvBK,WAAW,EAAE,UAAUL,CAAC,OAAQ;QAChCM,OAAO,EAAC,UAAU;QAClBC,KAAK,EAAE,KAAM;QACbC,QAAQ,EAAGC,CAAC,IAAK;UACfC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE;YACxB,GAAGhB,KAAK;YACR,CAACM,SAAS,GAAGQ,CAAC,CAACG,MAAM,CAACL,KAAK,IAAI,UAAUP,CAAC;UAC5C,CAAC,CAAC;UACFJ,QAAQ,CAAC;YACP,GAAGD,KAAK;YACR,CAACM,SAAS,GAAGQ,CAAC,CAACG,MAAM,CAACL,KAAK,IAAI,UAAUP,CAAC;UAC5C,CAAC,CAAC;QACJ;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;EAEN,CAAC;EAACnB,EAAA,CAlCIE,OAAO;EAoCb,MAAMkB,QAAQ,GAAG,EAAE;EACnB,KAAK,IAAIjB,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIN,WAAW,EAAEM,CAAC,EAAE,EAAE;IACrCiB,QAAQ,CAACC,IAAI,cAAC5B,OAAA,CAACS,OAAO;MAACC,CAAC,EAAEA;IAAE;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC;EAClC;EAEA,oBAAO1B,OAAA,CAAAE,SAAA;IAAA2B,QAAA,EAAGF;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACG,EAAA,GA3CI3B,QAAQ;AA4Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}