{"ast":null,"code":"var _jsxFileName = \"/Users/ruby/Desktop/split-react/src/AddExpense.jsx\";\nimport React from 'react';\nimport { RightAlignedRow, StyledAddIcon, StyledInput, StyledRemoveIcon, StyledSelect } from './Styles';\nimport { generateRandomString, getUpdatedRows } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddExpense = ({\n  additionalRows,\n  setAdditionalRows,\n  additionalRowsRef,\n  className,\n  optionsArr,\n  isDisabled,\n  rowComponent\n}) => {\n  const handleRemoveRow = uniqueId => {\n    const updatedRows = getUpdatedRows(additionalRowsRef.current, uniqueId);\n    setAdditionalRows(updatedRows);\n  };\n  return /*#__PURE__*/_jsxDEV(StyledAddIcon, {\n    onClick: () => {\n      const uniqueId = generateRandomString();\n      const updatedRows = [...additionalRows, /*#__PURE__*/_jsxDEV(\"rowComponent\", {\n        id: uniqueId,\n        children: [optionsArr && /*#__PURE__*/_jsxDEV(StyledSelect, {\n          className: `shared-people`,\n          placeholder: \"Select multiple people\",\n          multiple: true,\n          disabled: isDisabled,\n          children: optionsArr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(StyledInput, {\n          className: className,\n          placeholder: \"Amount\",\n          variant: \"outlined\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledRemoveIcon, {\n          onClick: () => handleRemoveRow(uniqueId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)];\n      setAdditionalRows(updatedRows);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = AddExpense;\nexport default AddExpense;\nvar _c;\n$RefreshReg$(_c, \"AddExpense\");","map":{"version":3,"names":["React","RightAlignedRow","StyledAddIcon","StyledInput","StyledRemoveIcon","StyledSelect","generateRandomString","getUpdatedRows","jsxDEV","_jsxDEV","AddExpense","additionalRows","setAdditionalRows","additionalRowsRef","className","optionsArr","isDisabled","rowComponent","handleRemoveRow","uniqueId","updatedRows","current","onClick","id","children","placeholder","multiple","disabled","fileName","_jsxFileName","lineNumber","columnNumber","variant","type","_c","$RefreshReg$"],"sources":["/Users/ruby/Desktop/split-react/src/AddExpense.jsx"],"sourcesContent":["import React from 'react';\nimport {\n  RightAlignedRow,\n  StyledAddIcon,\n  StyledInput,\n  StyledRemoveIcon,\n  StyledSelect,\n} from './Styles';\nimport { generateRandomString, getUpdatedRows } from './utils';\n\nconst AddExpense = ({\n  additionalRows,\n  setAdditionalRows,\n  additionalRowsRef,\n  className,\n  optionsArr,\n  isDisabled,\n  rowComponent,\n}) => {\n  const handleRemoveRow = (uniqueId) => {\n    const updatedRows = getUpdatedRows(additionalRowsRef.current, uniqueId);\n    setAdditionalRows(updatedRows);\n  };\n\n  return (\n    <StyledAddIcon\n      onClick={() => {\n        const uniqueId = generateRandomString();\n        const updatedRows = [\n          ...additionalRows,\n          <rowComponent id={uniqueId}>\n            {optionsArr && (\n              <StyledSelect\n                className={`shared-people`}\n                placeholder=\"Select multiple people\"\n                multiple={true}\n                disabled={isDisabled}\n              >\n                {optionsArr}\n              </StyledSelect>\n            )}\n\n            <StyledInput\n              className={className}\n              placeholder=\"Amount\"\n              variant=\"outlined\"\n              type=\"number\"\n            />\n            <StyledRemoveIcon onClick={() => handleRemoveRow(uniqueId)} />\n          </rowComponent>,\n        ];\n\n        setAdditionalRows(updatedRows);\n      }}\n    />\n  );\n};\n\nexport default AddExpense;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,eAAe,EACfC,aAAa,EACbC,WAAW,EACXC,gBAAgB,EAChBC,YAAY,QACP,UAAU;AACjB,SAASC,oBAAoB,EAAEC,cAAc,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,UAAU,GAAGA,CAAC;EAClBC,cAAc;EACdC,iBAAiB;EACjBC,iBAAiB;EACjBC,SAAS;EACTC,UAAU;EACVC,UAAU;EACVC;AACF,CAAC,KAAK;EACJ,MAAMC,eAAe,GAAIC,QAAQ,IAAK;IACpC,MAAMC,WAAW,GAAGb,cAAc,CAACM,iBAAiB,CAACQ,OAAO,EAAEF,QAAQ,CAAC;IACvEP,iBAAiB,CAACQ,WAAW,CAAC;EAChC,CAAC;EAED,oBACEX,OAAA,CAACP,aAAa;IACZoB,OAAO,EAAEA,CAAA,KAAM;MACb,MAAMH,QAAQ,GAAGb,oBAAoB,CAAC,CAAC;MACvC,MAAMc,WAAW,GAAG,CAClB,GAAGT,cAAc,eACjBF,OAAA;QAAcc,EAAE,EAAEJ,QAAS;QAAAK,QAAA,GACxBT,UAAU,iBACTN,OAAA,CAACJ,YAAY;UACXS,SAAS,EAAE,eAAgB;UAC3BW,WAAW,EAAC,wBAAwB;UACpCC,QAAQ,EAAE,IAAK;UACfC,QAAQ,EAAEX,UAAW;UAAAQ,QAAA,EAEpBT;QAAU;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACf,eAEDtB,OAAA,CAACN,WAAW;UACVW,SAAS,EAAEA,SAAU;UACrBW,WAAW,EAAC,QAAQ;UACpBO,OAAO,EAAC,UAAU;UAClBC,IAAI,EAAC;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC,eACFtB,OAAA,CAACL,gBAAgB;UAACkB,OAAO,EAAEA,CAAA,KAAMJ,eAAe,CAACC,QAAQ;QAAE;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,CAChB;MAEDnB,iBAAiB,CAACQ,WAAW,CAAC;IAChC;EAAE;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAACG,EAAA,GA9CIxB,UAAU;AAgDhB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}