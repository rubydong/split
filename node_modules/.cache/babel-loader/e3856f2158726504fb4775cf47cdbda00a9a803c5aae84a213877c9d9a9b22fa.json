{"ast":null,"code":"var _jsxFileName = \"/Users/ruby/Desktop/split/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport IntroScreen from \"./IntroScreen\";\nimport { EXPENSES_SCREEN, INTRO_SCREEN, RESULTS_SCREEN } from \"./constants\";\nimport ExpensesScreen from \"./ExpensesScreen\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 1000px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n_c = Container;\nconst App = () => {\n  _s();\n  const defaultNnumOfPeople = 2;\n  const [numOfPeople, setNumOfPeople] = React.useState(defaultNnumOfPeople);\n\n  // { person-i: name }\n  const [names, setNames] = React.useState({});\n  const [total, setTotal] = React.useState(0);\n  const [results, setResults] = React.useState([]);\n  const [currentScreen, setCurrentScreen] = React.useState(INTRO_SCREEN);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Split Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), currentScreen === INTRO_SCREEN && /*#__PURE__*/_jsxDEV(IntroScreen, {\n      numOfPeople: numOfPeople,\n      setNumOfPeople: setNumOfPeople,\n      names: names,\n      setNames: setNames,\n      setCurrentScreen: setCurrentScreen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), currentScreen === EXPENSES_SCREEN && /*#__PURE__*/_jsxDEV(ExpensesScreen, {\n      names: names,\n      setTotal: setTotal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), currentScreen === RESULTS_SCREEN && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: results\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"J7NVsEMaLU1Tiz3NAJ2oG7LRLQo=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","styled","IntroScreen","EXPENSES_SCREEN","INTRO_SCREEN","RESULTS_SCREEN","ExpensesScreen","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","App","_s","defaultNnumOfPeople","numOfPeople","setNumOfPeople","useState","names","setNames","total","setTotal","results","setResults","currentScreen","setCurrentScreen","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/ruby/Desktop/split/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport * as React from \"react\";\nimport styled from \"@emotion/styled\";\nimport IntroScreen from \"./IntroScreen\";\nimport { EXPENSES_SCREEN, INTRO_SCREEN, RESULTS_SCREEN } from \"./constants\";\nimport ExpensesScreen from \"./ExpensesScreen\";\n\nconst Container = styled.div`\n  width: 1000px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst App = () => {\n  const defaultNnumOfPeople = 2;\n  const [numOfPeople, setNumOfPeople] = React.useState(defaultNnumOfPeople);\n\n  // { person-i: name }\n  const [names, setNames] = React.useState({});\n  const [total, setTotal] = React.useState(0);\n  const [results, setResults] = React.useState([]);\n  const [currentScreen, setCurrentScreen] = React.useState(INTRO_SCREEN);\n\n  return (\n    <Container>\n      <h1>Split Expenses</h1>\n      {currentScreen === INTRO_SCREEN && (\n        <IntroScreen\n          numOfPeople={numOfPeople}\n          setNumOfPeople={setNumOfPeople}\n          names={names}\n          setNames={setNames}\n          setCurrentScreen={setCurrentScreen}\n        />\n      )}\n\n      {currentScreen === EXPENSES_SCREEN && (\n        <ExpensesScreen names={names} setTotal={setTotal} />\n      )}\n      {currentScreen === RESULTS_SCREEN && <>{results}</>}\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,MAAM,MAAM,iBAAiB;AACpC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,eAAe,EAAEC,YAAY,EAAEC,cAAc,QAAQ,aAAa;AAC3E,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,SAAS,GAAGV,MAAM,CAACW,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,SAAS;AAQf,MAAMG,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,mBAAmB,GAAG,CAAC;EAC7B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,KAAK,CAACmB,QAAQ,CAACH,mBAAmB,CAAC;;EAEzE;EACA,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,KAAK,CAACmB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,KAAK,CAACmB,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGzB,KAAK,CAACmB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAG3B,KAAK,CAACmB,QAAQ,CAACf,YAAY,CAAC;EAEtE,oBACEI,OAAA,CAACG,SAAS;IAAAiB,QAAA,gBACRpB,OAAA;MAAAoB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtBN,aAAa,KAAKtB,YAAY,iBAC7BI,OAAA,CAACN,WAAW;MACVe,WAAW,EAAEA,WAAY;MACzBC,cAAc,EAAEA,cAAe;MAC/BE,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA,QAAS;MACnBM,gBAAgB,EAAEA;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACF,EAEAN,aAAa,KAAKvB,eAAe,iBAChCK,OAAA,CAACF,cAAc;MAACc,KAAK,EAAEA,KAAM;MAACG,QAAQ,EAAEA;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACpD,EACAN,aAAa,KAAKrB,cAAc,iBAAIG,OAAA,CAAAE,SAAA;MAAAkB,QAAA,EAAGJ;IAAO,gBAAG,CAAC;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEhB,CAAC;AAACjB,EAAA,CA7BID,GAAG;AAAAmB,GAAA,GAAHnB,GAAG;AA+BT,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAoB,GAAA;AAAAC,YAAA,CAAArB,EAAA;AAAAqB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}